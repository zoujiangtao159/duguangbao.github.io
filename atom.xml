<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>duguangbao&#39;s blogs</title>
  
  <subtitle>喜欢折腾的学生狗一只</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://duguangbao.github.io/"/>
  <updated>2018-08-16T09:34:07.412Z</updated>
  <id>https://duguangbao.github.io/</id>
  
  <author>
    <name>duguangbao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>爬取豆瓣音乐top250的数据</title>
    <link href="https://duguangbao.github.io/2018/08/16/%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3%E9%9F%B3%E4%B9%90top250%E7%9A%84%E6%95%B0%E6%8D%AE/"/>
    <id>https://duguangbao.github.io/2018/08/16/爬取豆瓣音乐top250的数据/</id>
    <published>2018-08-16T01:27:16.303Z</published>
    <updated>2018-08-16T09:34:07.412Z</updated>
    
    <content type="html"><![CDATA[<h2 id="此次将利用Requests-lxml和re库爬取豆瓣音乐top250的数据，并存入mongodb数据库中"><a href="#此次将利用Requests-lxml和re库爬取豆瓣音乐top250的数据，并存入mongodb数据库中" class="headerlink" title="此次将利用Requests,lxml和re库爬取豆瓣音乐top250的数据，并存入mongodb数据库中"></a>此次将利用Requests,lxml和re库爬取豆瓣音乐top250的数据，并存入mongodb数据库中</h2><h2 id="爬虫思路"><a href="#爬虫思路" class="headerlink" title="爬虫思路"></a>爬虫思路</h2><h3 id="确定爬取信息"><a href="#确定爬取信息" class="headerlink" title="确定爬取信息"></a>确定爬取信息</h3><p>爬取的信息有：歌曲名，表演者，流派，发行时间，出版者，评分，如下图所示：</p><h3 id="使用浏览器手动浏览，以下为前四页的网址："><a href="#使用浏览器手动浏览，以下为前四页的网址：" class="headerlink" title="使用浏览器手动浏览，以下为前四页的网址："></a>使用浏览器手动浏览，以下为前四页的网址：</h3><blockquote><p><a href="https://music.douban.com/top250" target="_blank" rel="noopener">https://music.douban.com/top250</a><br><a href="https://music.douban.com/top250?start=25" target="_blank" rel="noopener">https://music.douban.com/top250?start=25</a><br><a href="https://music.douban.com/top250?start=50" target="_blank" rel="noopener">https://music.douban.com/top250?start=50</a><br><a href="https://music.douban.com/top250?start=75" target="_blank" rel="noopener">https://music.douban.com/top250?start=75</a><br>然后将第一页的网址改为：<br><a href="https://music.douban.com/top250?start=0" target="_blank" rel="noopener">https://music.douban.com/top250?start=0</a><br>也可以正常浏览，可知只需更改<a href="https://music.douban.com/top250?start=后的数字就好" target="_blank" rel="noopener">https://music.douban.com/top250?start=后的数字就好</a></p></blockquote><h3 id="需要爬取的信息在top250页面并不全面，所以需要先爬取进入详细页的网址链接，然后再进入详细页进行爬取，详见爬虫代码"><a href="#需要爬取的信息在top250页面并不全面，所以需要先爬取进入详细页的网址链接，然后再进入详细页进行爬取，详见爬虫代码" class="headerlink" title="需要爬取的信息在top250页面并不全面，所以需要先爬取进入详细页的网址链接，然后再进入详细页进行爬取，详见爬虫代码"></a>需要爬取的信息在top250页面并不全面，所以需要先爬取进入详细页的网址链接，然后再进入详细页进行爬取，详见爬虫代码</h3><h3 id="最后使用pymongo库将爬取到的信息存入数据库"><a href="#最后使用pymongo库将爬取到的信息存入数据库" class="headerlink" title="最后使用pymongo库将爬取到的信息存入数据库"></a>最后使用pymongo库将爬取到的信息存入数据库</h3><h2 id="爬虫代码及分析"><a href="#爬虫代码及分析" class="headerlink" title="爬虫代码及分析"></a>爬虫代码及分析</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入相应的库文件</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line"><span class="comment">#连接数据库，创建数据库和数据集合</span></span><br><span class="line">client = pymongo.MongoClient(<span class="string">'localhost'</span>,<span class="number">27017</span>)</span><br><span class="line">mydb = client[<span class="string">'mydb'</span>]</span><br><span class="line">musictop = mydb[<span class="string">'musictop'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#加入请求头</span></span><br><span class="line">headers = &#123;</span><br><span class="line">        Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">68.0</span><span class="number">.3440</span><span class="number">.75</span> Safari/<span class="number">537.36</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">#在自己浏览器中输入about:version即可查看相关信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义获取豆瓣音乐的详细url的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_url_music</span><span class="params">(url)</span>:</span></span><br><span class="line">    html = requests.get(url,headers = headers)</span><br><span class="line">    selector = etree.HTML(html.text)</span><br><span class="line">    music_hrefs = selector.xpath(<span class="string">'//a[@class="nbg"]/@href'</span>) <span class="comment">#xpath语法</span></span><br><span class="line">    <span class="keyword">for</span> music_href <span class="keyword">in</span> music_hrefs:</span><br><span class="line">        get_music_info(music_href)</span><br><span class="line">        </span><br><span class="line"><span class="comment">#定义获取详细信息的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_music_info</span><span class="params">(url)</span>:</span></span><br><span class="line">    res = requests.get(url,headers = headers)</span><br><span class="line">    sele = etree.HTML(res.text)</span><br><span class="line">    name = sele.xpath(<span class="string">'//*[@id="wrapper"]/h1/span/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#详细页信息略有不同，若采用定位标签的方法获取信息，可能会有一些详细信息匹配错误，更好的方法是使用正则表达式进行匹配</span></span><br><span class="line">    author = re.findall(<span class="string">'表演者:.*?&gt;(.*?)&lt;/a&gt;'</span>,res.text,re.S)[<span class="number">0</span>]</span><br><span class="line">    流派，发行时间出版信息使用的也是正则表达式，因为在这里使用xpath较乱，此处多个标签相互嵌套，还有一些乱码的符号（主要是我懒^^）</span><br><span class="line">    styles = re.findall(<span class="string">'&lt;span class="pl"&gt;流派:&lt;/span&gt;&amp;nbsp;(.*?)&lt;br'</span>,res.text,re.S)</span><br><span class="line">    <span class="keyword">if</span> len(styles) == <span class="number">0</span>:</span><br><span class="line">        style = <span class="string">'未知'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        style = styles[<span class="number">0</span>].strip()</span><br><span class="line">    time = re.findall(<span class="string">'&lt;span class="pl"&gt;发行时间:&lt;/span&gt;&amp;nbsp;(.*?)&lt;br'</span>,res.text,re.S)[<span class="number">0</span>].strip()</span><br><span class="line">    publishers = re.findall(<span class="string">'&lt;span class="pl"&gt;出版者:&lt;/span&gt;.*?;(.*?)&lt;br'</span>,res.text,re.S)</span><br><span class="line">    <span class="keyword">if</span> len(publishers) == <span class="number">0</span>:</span><br><span class="line">        publisher = <span class="string">'未知'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        publisher = publishers[<span class="number">0</span>].strip()</span><br><span class="line">    score = sele.xpath(<span class="string">'//*[@id="interest_sectl"]/div/div[2]/strong/text()'</span>)[<span class="number">0</span>]</span><br><span class="line">    print(name,author,style,time,publisher,score)</span><br><span class="line">    info = &#123;</span><br><span class="line">        <span class="string">'name'</span>:name,</span><br><span class="line">        <span class="string">'author'</span>:author,</span><br><span class="line">        <span class="string">'style'</span>:style,</span><br><span class="line">        <span class="string">'time'</span>:time,</span><br><span class="line">        <span class="string">'publisher'</span>:publisher,</span><br><span class="line">        <span class="string">'score'</span>:score</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#插入数据</span></span><br><span class="line">    musictop.insert_one(info)</span><br><span class="line"></span><br><span class="line"><span class="comment">#主函数入口</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="comment">#构造十个url并依次调用函数</span></span><br><span class="line">    urls = [<span class="string">'https://music.douban.com/top250?start=&#123;&#125;'</span>.format(str(i)) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">250</span>,<span class="number">25</span>)]</span><br><span class="line">    <span class="keyword">for</span> url <span class="keyword">in</span> urls:</span><br><span class="line">        get_url_music(url)</span><br><span class="line">        <span class="comment">#显示进程，可在其他地方输出相关信息</span></span><br><span class="line">        print(<span class="string">'papapapapapapapapapapapapapapapapapapapapapapapapapapapapaapapapapa'</span>)</span><br><span class="line">        <span class="comment">#每循环一次让程序暂停一秒</span></span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>另外文章内涉及到数据库，正则式和xpath语法之类的各位看官可以百度一下网上有不少教程，而且并不是很难&lt;^^&gt;(正则表达式除外，我现在还没学会qq)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;此次将利用Requests-lxml和re库爬取豆瓣音乐top250的数据，并存入mongodb数据库中&quot;&gt;&lt;a href=&quot;#此次将利用Requests-lxml和re库爬取豆瓣音乐top250的数据，并存入mongodb数据库中&quot; class=&quot;headerl
      
    
    </summary>
    
    
      <category term="article" scheme="https://duguangbao.github.io/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>markdown的简单使用</title>
    <link href="https://duguangbao.github.io/2018/08/15/markdown%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <id>https://duguangbao.github.io/2018/08/15/markdown的简单使用/</id>
    <published>2018-08-15T13:27:51.231Z</published>
    <updated>2018-08-15T13:30:52.735Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面："><a href="#写在前面：" class="headerlink" title="写在前面："></a>写在前面：</h1><h2 id="本文只记录了自己学习markdown的一点，如果您看到这篇文章并有所收获，我将倍感荣幸，如有错误欢迎指正。"><a href="#本文只记录了自己学习markdown的一点，如果您看到这篇文章并有所收获，我将倍感荣幸，如有错误欢迎指正。" class="headerlink" title="  本文只记录了自己学习markdown的一点，如果您看到这篇文章并有所收获，我将倍感荣幸，如有错误欢迎指正。"></a>  本文只记录了自己学习markdown的一点，如果您看到这篇文章并有所收获，我将倍感荣幸，如有错误欢迎指正。</h2><p>  markdown是一种方便记忆和书写的纯文本标记语言，作者可以使用简单的标记符号对文本达到自己想要的效果，例如：在word中想要达到给字体加粗的效果可以将字体选中然后shu’biao鼠标点选进行加粗，而在markdown中则可以使用<strong><strong>粗体</strong></strong>这样来表示，这样就可更好的使用键盘而不必再去点选鼠标</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>markdown支持两种标题的语法</p><blockquote><p>类setext形式<br>atx形式</p></blockquote><h3 id="类-Setext-形式是用底线的形式，利用-（最高阶标题）和-（第二阶标题），例如："><a href="#类-Setext-形式是用底线的形式，利用-（最高阶标题）和-（第二阶标题），例如：" class="headerlink" title="类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如："></a>类 Setext 形式是用底线的形式，利用 = （最高阶标题）和 - （第二阶标题），例如：</h3><blockquote><p>title 1<br> \=======<br>title 2<br> -—-</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;写在前面：&quot;&gt;&lt;a href=&quot;#写在前面：&quot; class=&quot;headerlink&quot; title=&quot;写在前面：&quot;&gt;&lt;/a&gt;写在前面：&lt;/h1&gt;&lt;h2 id=&quot;本文只记录了自己学习markdown的一点，如果您看到这篇文章并有所收获，我将倍感荣幸，如有错误欢迎指正。
      
    
    </summary>
    
    
      <category term="article" scheme="https://duguangbao.github.io/tags/article/"/>
    
  </entry>
  
  <entry>
    <title>python + selenium +chrome爬取qq空间好友说说并存入mongodb数据库</title>
    <link href="https://duguangbao.github.io/2018/08/15/python%20+%20selenium%20+chrome%E7%88%AC%E5%8F%96qq%E7%A9%BA%E9%97%B4%E5%A5%BD%E5%8F%8B%E8%AF%B4%E8%AF%B4%E5%B9%B6%E5%AD%98%E5%85%A5mongodb%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://duguangbao.github.io/2018/08/15/python + selenium +chrome爬取qq空间好友说说并存入mongodb数据库/</id>
    <published>2018-08-15T13:25:47.946Z</published>
    <updated>2018-08-15T02:14:41.463Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备阶段"><a href="#准备阶段" class="headerlink" title="准备阶段"></a>准备阶段</h2><pre><code>在正式开始在前需要先准备好做爬虫的工具，本例使用chrome无头浏览器进行爬取工作，也可使用其他浏览器，程序中的其他可替代工具在此之后不再一一赘述，有一些不明白的地方可以自行百度，有错误的地方欢迎大家指正，大家共同学习共同进步！！</code></pre><h3 id="需要用到的库"><a href="#需要用到的库" class="headerlink" title="需要用到的库:"></a>需要用到的库:</h3><blockquote><p>pymongo<br>selenium<br>csv<br>time</p></blockquote><h2 id="爬虫思路分析"><a href="#爬虫思路分析" class="headerlink" title="爬虫思路分析"></a>爬虫思路分析</h2><blockquote><p>从csv文件读取好友qq号码构造url链接<br>使用chrome + selenium登录QQ，选择账号密码的等率方式<br>爬取好友说说的发表的时间信息<br>把爬取到的信息存储在mongodb中</p></blockquote><h3 id="从qq邮箱获取好友列表，存储为csv文件"><a href="#从qq邮箱获取好友列表，存储为csv文件" class="headerlink" title="从qq邮箱获取好友列表，存储为csv文件"></a>从qq邮箱获取好友列表，存储为csv文件</h3><pre><code>打开qq邮箱选择通讯录 &gt; 工具 &gt; 导出联系人文件选择部分好友文件导出，保存为csv文件，之后便于从csv文件读取好友qq号</code></pre><h3 id="qq空间好友说说的链接为http-user-qzone-qq-com-好友qq号码-311，首次打开需登录"><a href="#qq空间好友说说的链接为http-user-qzone-qq-com-好友qq号码-311，首次打开需登录" class="headerlink" title="qq空间好友说说的链接为http://user.qzone.qq.com/{好友qq号码}/311，首次打开需登录"></a>qq空间好友说说的链接为<a href="http://user.qzone.qq.com/{好友qq号码}/311，首次打开需登录" target="_blank" rel="noopener">http://user.qzone.qq.com/{好友qq号码}/311，首次打开需登录</a></h3><h3 id="观察源码，选择适当的筛选方法"><a href="#观察源码，选择适当的筛选方法" class="headerlink" title="观察源码，选择适当的筛选方法"></a>观察源码，选择适当的筛选方法</h3><h3 id="写入数据库"><a href="#写入数据库" class="headerlink" title="写入数据库"></a>写入数据库</h3><h2 id="爬虫代码如下："><a href="#爬虫代码如下：" class="headerlink" title="爬虫代码如下："></a>爬虫代码如下：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#导入程序需要的库</span></span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line"></span><br><span class="line"><span class="comment">#链接数据库</span></span><br><span class="line">client = pymongo.MongoClient(<span class="string">'localhost'</span>,<span class="number">27017</span>)</span><br><span class="line"><span class="comment">#创建数据库和数据集合</span></span><br><span class="line">net_speader = client[<span class="string">'net_speader'</span>]</span><br><span class="line">qq_data = net_speader[<span class="string">'qq_data'</span>]</span><br><span class="line"></span><br><span class="line">chrome_options = Options()</span><br><span class="line"><span class="comment">#选择无头chrome，并设置窗口最大化</span></span><br><span class="line">chrome_options.add_argument(<span class="string">'--headless'</span>)</span><br><span class="line">driver = webdriver.Chrome(chrome_options=chrome_options)</span><br><span class="line">driver.maximize_window()</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义获取信息的函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_info</span><span class="params">(qq)</span>:</span></span><br><span class="line">    <span class="comment">#声明变量</span></span><br><span class="line">    <span class="keyword">global</span> time</span><br><span class="line">    <span class="comment">#请求url隐式等待15s</span></span><br><span class="line">    driver.get(<span class="string">'https://user.qzone.qq.com/&#123;&#125;/311'</span>.format(qq))</span><br><span class="line">    driver.implicitly_wait(<span class="number">15</span>)</span><br><span class="line">    <span class="comment">#判断页面是否需要登陆，通过查找是否有ID为login_div的div标签来进行判断</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.find_element_by_id(<span class="string">'login_div'</span>)</span><br><span class="line">        a = <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        a = <span class="keyword">False</span></span><br><span class="line">    <span class="comment">#如果需要登陆则切换到需要登陆的框架进行登陆</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="keyword">True</span>:</span><br><span class="line">        driver.switch_to.frame(<span class="string">'login_frame'</span>)</span><br><span class="line">        driver.find_element_by_id(<span class="string">'switcher_plogin'</span>).click()</span><br><span class="line">        driver.find_element_by_id(<span class="string">'u'</span>).clear()</span><br><span class="line">        driver.find_element_by_id(<span class="string">'u'</span>).send_keys(<span class="string">'你的qq号码'</span>)</span><br><span class="line">        driver.find_element_by_id(<span class="string">'p'</span>).clear()</span><br><span class="line">        driver.find_element_by_id(<span class="string">'p'</span>).send_keys(<span class="string">'你的qq号密码'</span>)</span><br><span class="line">        driver.find_element_by_id(<span class="string">'login_button'</span>).click()</span><br><span class="line">        time.sleep(<span class="number">5</span>)</span><br><span class="line">    driver.implicitly_wait(<span class="number">3</span>)</span><br><span class="line">    <span class="comment">#通过查找是否有ID为QM_OwnerInfo_Icon的div标签来判断是否有权限访问好友的qq空间</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.find_element_by_id(<span class="string">'QM_OwnerInfo_Icon'</span>)</span><br><span class="line">        b = <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        b = <span class="keyword">False</span></span><br><span class="line">    <span class="comment">#如果可以访问则切换到好友说说框架进行数据的爬取和储存</span></span><br><span class="line">    <span class="keyword">if</span> b == <span class="keyword">True</span>:</span><br><span class="line">        driver.switch_to.frame(<span class="string">'app_canvas_frame'</span>)</span><br><span class="line">        contents = driver.find_elements_by_css_selector(<span class="string">'.content'</span>)</span><br><span class="line">        times = driver.find_elements_by_css_selector(<span class="string">'.c_tx.c_tx3.goDetail'</span>)</span><br><span class="line">        <span class="keyword">for</span> content,time <span class="keyword">in</span> zip(contents,times):</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'time'</span>:time.text,</span><br><span class="line">                <span class="string">'content'</span>:content.text</span><br><span class="line">            &#125;</span><br><span class="line">            print(data)</span><br><span class="line">            qq_data.insert_one(data)</span><br><span class="line"><span class="comment">#主程序入口，通过csv库读取通讯录文件，存入列表</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    qq_lists = []</span><br><span class="line">    fp = open(<span class="string">r'W:\text\qqmail.csv'</span>,encoding=<span class="string">'gb18030'</span>,errors=<span class="string">'ignore'</span>)</span><br><span class="line">    reader = csv.DictReader(fp)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">        qq_lists.append(row[<span class="string">'qqmail'</span>].split(<span class="string">'@'</span>)[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    fp.close()</span><br><span class="line">    print(qq_lists)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> qq_lists:</span><br><span class="line">        get_info(i)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;准备阶段&quot;&gt;&lt;a href=&quot;#准备阶段&quot; class=&quot;headerlink&quot; title=&quot;准备阶段&quot;&gt;&lt;/a&gt;准备阶段&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;在正式开始在前需要先准备好做爬虫的工具，本例使用chrome无头浏览器进行爬取工作，也可使用其他浏览器，程序
      
    
    </summary>
    
    
      <category term="article" scheme="https://duguangbao.github.io/tags/article/"/>
    
  </entry>
  
</feed>
